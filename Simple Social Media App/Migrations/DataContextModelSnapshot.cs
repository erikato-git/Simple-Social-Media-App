// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Simple_Social_Media_App.DataAccess;

#nullable disable

namespace Simple_Social_Media_App.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Simple_Social_Media_App.DataAccess.Model.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Bo Warmming - Thumbs Up ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3665),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Rasmus Paludan - Thumbs Up ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3669),
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Per Hansen - Thumbs Up ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3672),
                            PostId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Simple_Social_Media_App.DataAccess.Model.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Per Hansen ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3639),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Bo Warmming ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3642),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Rasmus Paludan ...",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3644),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Simple_Social_Media_App.DataAccess.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Profile_Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Salt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3356),
                            Email = "user1@mail.com",
                            Full_Name = "Per Hansen",
                            Password = "pa$$w0rd",
                            Salt = 0
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3363),
                            Email = "user2@mail.com",
                            Full_Name = "Bo Warmming",
                            Password = "pa$$w0rd",
                            Salt = 0
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2023, 2, 18, 23, 16, 19, 647, DateTimeKind.Utc).AddTicks(3364),
                            Email = "user3@mail.com",
                            Full_Name = "Rasmus Paludan",
                            Password = "pa$$w0rd",
                            Salt = 0
                        });
                });

            modelBuilder.Entity("Simple_Social_Media_App.DataAccess.Model.Comment", b =>
                {
                    b.HasOne("Simple_Social_Media_App.DataAccess.Model.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("Simple_Social_Media_App.DataAccess.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Simple_Social_Media_App.DataAccess.Model.Post", b =>
                {
                    b.HasOne("Simple_Social_Media_App.DataAccess.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
